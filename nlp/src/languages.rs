pub enum Languages {
    AR,
    BG,
    DA,
    DE,
    EL,
    EN,
    ES,
    FI,
    FR,
    GA,
    HI,
    HU,
    HY,
    ID,
    IT,
    NE,
    NL,
    NO,
    PT,
    RO,
    RU,
    SA,
    SL,
    SR,
    TA,
    TR,
    UK,
    ZH,
}

impl Languages {
    pub fn from_str(s: &str) -> Option<Languages> {
        match s {
            "ar" => Some(Languages::AR),
            "bg" => Some(Languages::BG),
            "da" => Some(Languages::DA),
            "de" => Some(Languages::DE),
            "el" => Some(Languages::EL),
            "en" => Some(Languages::EN),
            "es" => Some(Languages::ES),
            "fi" => Some(Languages::FI),
            "fr" => Some(Languages::FR),
            "ga" => Some(Languages::GA),
            "hi" => Some(Languages::HI),
            "hu" => Some(Languages::HU),
            "hy" => Some(Languages::HY),
            "id" => Some(Languages::ID),
            "it" => Some(Languages::IT),
            "ne" => Some(Languages::NE),
            "nl" => Some(Languages::NL),
            "no" => Some(Languages::NO),
            "pt" => Some(Languages::PT),
            "ro" => Some(Languages::RO),
            "ru" => Some(Languages::RU),
            "sa" => Some(Languages::SA),
            "sl" => Some(Languages::SL),
            "sr" => Some(Languages::SR),
            "ta" => Some(Languages::TA),
            "tr" => Some(Languages::TR),
            "uk" => Some(Languages::UK),
            "zh" => Some(Languages::ZH),
            _ => None,
        }
    }

    pub fn to_str(&self) -> &str {
        match self {
            Languages::AR => "ar",
            Languages::BG => "bg",
            Languages::DA => "da",
            Languages::DE => "de",
            Languages::EL => "el",
            Languages::EN => "en",
            Languages::ES => "es",
            Languages::FI => "fi",
            Languages::FR => "fr",
            Languages::GA => "ga",
            Languages::HI => "hi",
            Languages::HU => "hu",
            Languages::HY => "hy",
            Languages::ID => "id",
            Languages::IT => "it",
            Languages::NE => "ne",
            Languages::NL => "nl",
            Languages::NO => "no",
            Languages::PT => "pt",
            Languages::RO => "ro",
            Languages::RU => "ru",
            Languages::SA => "sa",
            Languages::SL => "sl",
            Languages::SR => "sr",
            Languages::TA => "ta",
            Languages::TR => "tr",
            Languages::UK => "uk",
            Languages::ZH => "zh",
        }
    }

    pub fn to_full_str(&self) -> &str {
        match self {
            Languages::AR => "arabic",
            Languages::BG => "bulgarian",
            Languages::DA => "danish",
            Languages::DE => "german",
            Languages::EL => "greek",
            Languages::EN => "english",
            Languages::ES => "spanish",
            Languages::FI => "finnish",
            Languages::FR => "french",
            Languages::GA => "irish",
            Languages::HI => "hindi",
            Languages::HU => "hungarian",
            Languages::HY => "armenian",
            Languages::ID => "indonesian",
            Languages::IT => "italian",
            Languages::NE => "nepali",
            Languages::NL => "dutch",
            Languages::NO => "norwegian",
            Languages::PT => "portuguese",
            Languages::RO => "romanian",
            Languages::RU => "russian",
            Languages::SA => "sanskrit",
            Languages::SL => "slovenian",
            Languages::SR => "serbian",
            Languages::TA => "tamil",
            Languages::TR => "turkish",
            Languages::UK => "ukrainian",
            Languages::ZH => "chinese",
        }
    }

    pub fn from_full_str(s: &str) -> Option<Languages> {
        match s {
            "arabic" => Some(Languages::AR),
            "bulgarian" => Some(Languages::BG),
            "danish" => Some(Languages::DA),
            "german" => Some(Languages::DE),
            "greek" => Some(Languages::EL),
            "english" => Some(Languages::EN),
            "spanish" => Some(Languages::ES),
            "finnish" => Some(Languages::FI),
            "french" => Some(Languages::FR),
            "irish" => Some(Languages::GA),
            "hindi" => Some(Languages::HI),
            "hungarian" => Some(Languages::HU),
            "armenian" => Some(Languages::HY),
            "indonesian" => Some(Languages::ID),
            "italian" => Some(Languages::IT),
            "nepali" => Some(Languages::NE),
            "dutch" => Some(Languages::NL),
            "norwegian" => Some(Languages::NO),
            "portuguese" => Some(Languages::PT),
            "romanian" => Some(Languages::RO),
            "russian" => Some(Languages::RU),
            "sanskrit" => Some(Languages::SA),
            "slovenian" => Some(Languages::SL),
            "serbian" => Some(Languages::SR),
            "tamil" => Some(Languages::TA),
            "turkish" => Some(Languages::TR),
            "ukrainian" => Some(Languages::UK),
            "chinese" => Some(Languages::ZH),
            _ => None,
        }
    }
}
